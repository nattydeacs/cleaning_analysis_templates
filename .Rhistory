geom_histogram() %>%
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram() +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(dose.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(dose~ supp)
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
?sapply
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
lapply(data, quantile)
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
sapply(data, quantile)
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(dose))
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(dose)
unique(data$dose)
data$dose <- as.factor(data$dose)
quantile(len)
quantile(data$len)
quantile(data$len[sup])
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
quantile(data[])
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
#quantile(data[])
unique(data$supp)
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$supp)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
quantile(data[sup= == OJ])
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$supp)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
quantile(data[sup == OJ])
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$supp)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
quantile(data[supp == OJ])
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$supp)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
quantile(data[supp == "OJ"])
data[supp == "OJ"]
data
sapply(data$supp, quantile)
quantile(filter(data, supp == "OJ")$lenn)
filter(data, supp == "OJ")
quantile(filter(data, supp == "OJ")$len)
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$supp)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
quantile(filter(data, supp == "OJ")$len)
quantile(filter(data, supp == "OJ")$len)
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$supp)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
quantile(data$len)
quantile(filter(data, supp == "OJ")$len)
quantile(filter(data, supp == "VC")$len)
summary(data)
?table
table(data$supp, data$dose)
library(dplyr)
library(ggplot2)
data <- ToothGrowth
str(ToothGrowth)
unique(data$supp)
unique(data$dose) #this should be a factor
data$dose <- as.factor(data$dose)
table(data$supp, data$dose)
quantile(data$len)
quantile(filter(data, supp == "OJ")$len)
quantile(filter(data, supp == "VC")$len)
summary(data)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(dose~ supp)
summary(data)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(dose~ supp)
summary(data)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 30) +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(dose~ supp)
summary(data)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 5) +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 10) +
facet_grid(dose~ supp)
summary(data)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 5) +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 1) +
facet_grid(dose~ supp)
summary(data)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 5) +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 1) +
facet_grid(dose~ supp)
summary(data)
mean(filter(data, supp == "OJ")$len)
mean(filter(data, supp == "VC")$len)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 5) +
facet_grid(.~ supp)
ggplot(data, aes(x=len)) +
geom_histogram(binwidth = 1) +
facet_grid(dose~ supp)
OJ <- (filter(data, supp == "OJ")$len)
VC <- (filter(data, supp == "VC")$len)
t.test(OJ, VC)
OJ <- filter(data, supp == "OJ")
VC <- filter(data, supp == "VC")
t.test(OJ$len, VC$len)
data
data$dose
#compare by supp
OJ <- filter(data, supp == "OJ")
VC <- filter(data, supp == "VC")
t.test(OJ$len, VC$len)
#compare by dose
half <- filter(data, dose == .5)
one <- filter(data, supp == 1)
two <- filter(data, supp == 2)
t.test(half$len, VC$one)
#compare by supp
OJ <- filter(data, supp == "OJ")
VC <- filter(data, supp == "VC")
t.test(OJ$len, VC$len)
#compare by dose
half <- filter(data, dose == .5)
one <- filter(data, supp == 1)
two <- filter(data, supp == 2)
t.test(half$len, VC$one)
t.test(half$len, VC$two)
#compare by supp
OJ <- filter(data, supp == "OJ")
VC <- filter(data, supp == "VC")
t.test(OJ$len, VC$len)
#compare by dose
half <- filter(data, dose == .5)
one <- filter(data, supp == 1)
two <- filter(data, supp == 2)
t.test(half$len, VC$one)
t.test(half$len, VC$two)
t.test(one$len, VC$two)
two
#compare by supp
OJ <- filter(data, supp == "OJ")
VC <- filter(data, supp == "VC")
t.test(OJ$len, VC$len)
#compare by dose
half <- filter(data, dose == .5)
one <- filter(data, supp == 1)
two <- filter(data, supp == 2)
t.test(half$len, one$len)
half
one
#compare by supp
OJ <- filter(data, supp == "OJ")
VC <- filter(data, supp == "VC")
t.test(OJ$len, VC$len)
#compare by dose
half <- filter(data, dose == .5)
one <- filter(data, dose == 1)
two <- filter(data, dose == 2)
t.test(half$len, one$len)
t.test(half$len, two$len)
t.test(one$len, two$len)
swirl()
library(swirl)
rm(list = ls())
swirl()
install_course("Regression Models")
swirl()
plot(child~parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd =3, col 'red')
abline(regrline, lwd =3, col = 'red')
summary(regline)
summary(regrline)
fit <- lm(child~parent)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(fit))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, ch_nor)
cor(gpa_nor, gch_nor)
l_nor <- (gch_nor, gpa_nor)
l_nor <- cor(gch_nor, gpa_nor)
l_nor <- lm(gch_nor, gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
mean(y)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
for(i in x) {1+i}
for(i in x) {print(1+i)}
for(i in x) {(y[i]-x[i])^2}
for(i in x) {print((y[i]-x[i])^2)}
y[1]
x[1]
for(i in x) {(y[i]-x[i])^2}
for(i in x) {return((y[i]-x[i])^2)}
for(i in x) {print((y[i]-x[i])^2)}
y[1]-x[1]
(y[1]-x[1])^2
for(i in x) {(y[i]-x[i])^2)}
for(i in x) {(y[i]-x[i])^2}
for(i in 1:10) {print((y[i]-x[i])^2)}
for(i in 1:10) {print((y[i]-x[i]*-1.73)^2)}
for(i in 1:10) {print(sum((y[i]-x[i]*-1.73)^2))}
for(i in 1:10) {print((y[i]-x[i])^2)}
sum(for(i in 1:10) {((y[i]-x[i])^2)})
for(i in 1:10) {print(sum((y[i]-x[i]*-1.73)^2))}
for(i in 1:10) {print((y[i]-x[i]*-1.73)^2)}
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*-1.73)^2))}
vect <- c()
vect
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*-1.73)^2))}
vect
sum(vect)
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*-.8263)^2))}
sum(vect)
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*-.5995)^2))}
sum(vect)
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*.5995)^2))}
sum(vect)
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*.8263)^2))}
sum(vect)
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*-1.73)^2))}
sum(vect)
vect <- c()
for(i in 1:10) {vect <- c(vect, ((y[i]-x[i]*-0.04462)^2))}
sum(vect)
lm(mpg ~ weight, data = mtcars)
mtcars
lm(mpg ~ wt, data = mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
vect2 <- c()
for(q in length(x)) {
vect2 <- c(vect2, (x[q]-mean(x))/var(x))
}
vect2[1]
vect2
vect2
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
vect2 <- c()
for(q in length(x)) {
vect2 <- c(vect2, (x[q]-mean(x))/var(x))
}
vect2[1]
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
vect2 <- c()
for(q in length(x)) {
vect2 <- c(vect2, (x[q]-mean(x))/var(x))
}
vect2
vect2 <- c()
length(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
vect2 <- c()
for(q in 1:length(x)) {
vect2 <- c(vect2, (x[q]-mean(x))/var(x))
}
vect2
(8.58-mean(x))/var(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
names(mtcars)
lm(mtcars$mpg ~ mtcars$wt)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean<- mean(x)
mean
mean<- c(mean(x), mean(x),mean(x),mean(x),mean(x))
mean
xnorm <- x-mean
xnorm
mean(xnorm)
sd <- c(sd(x), sd(x), sd(x), sd(x), sd(x))
sd
xnorm/sd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean<- c(mean(x), mean(x),mean(x),mean(x),mean(x))
xnorm <- x-mean
sd <- c(sd(x), sd(x), sd(x), sd(x), sd(x))
xnorm/sd
swirl()
library(swirl)
Nat
rm(list=ls())
swirl()
fit<- lm(child ~ parent, galton)
sum(fit$residuals)^2/n-2
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/ (n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child-mu)^2)
?deviance
deviance(sTot)
deviance(galton$child, galton$parent)
s
a <- Sum(2)
> sTot <- sum((galton$child-mu)^2)
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(fit)
sRese/sTot
sRes/sTot
1-sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
library(swirl)
rm(list=ls())
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2<- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant-1, trees2)
lapply(list(fit, fit2), coef)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
summary(lm(y~x))
summary(lm(mpg ~ wt, data = mtcars))
mean(mtcars$mpg)
mean(mtcars$mpg)-0.5591
head(mtcars)
mean(mtcars$mpg)
carslm <- summary(lm(mpg ~ wt, data = mtcars))
interval <_ mean(mtcars$mpg)*-5.3445+37.2851
interval <- mean(mtcars$mpg)*-5.3445+37.2851
interval
interval <- mean(mtcars$wt)*-5.3445+37.2851
interval
interval <- mean(mtcars$wt)*-5.3445+37.2851 + c(1,1)*0.5591
interval
c(1,1)*0.5591
interval <- mean(mtcars$wt)*-5.3445+37.2851 + c(-1,1)*0.5591
interval
interval <- mean(mtcars$wt)*-5.3445+37.2851 + c(-1,1)*1.8776
interval
carslm <- summary(lm(mpg ~ wt/1000, data = mtcars))
carslm <- summary(lm(mpg ~ wt, data = mtcars))
library(ggplot2)
ggplot(mtcars, aes(x=wt, y = mpg))+
geom_point() +
geom_smooth(fit="lm")
ggplot(mtcars, aes(x=wt, y = mpg))+
geom_point() +
geom_smooth(fit= "lm")
ggplot(mtcars, aes(x=wt, y = mpg))+
geom_point() +
geom_smooth(model= "lm")
?geom_smooth
ggplot(mtcars, aes(x=wt, y = mpg))+
geom_point() +
geom_smooth(stat= "lm")
library(ggplot2)
ggplot(mtcars, aes(x=wt, y = mpg))+
geom_point() +
geom_smooth(stat= "lm")
library(ggplot2)
ggplot(mtcars, aes(x=wt, y = mpg))+
geom_point() +
geom_smooth(method= "lm")
predict(carslm, newdata = 3, interval = 'confidence')
predict(carslm, newdata = 3, interval = 'confidence')
carslm <- lm(mpg ~ wt, data = mtcars)
predict(carslm, newdata = 3, interval = 'confidence')
predict(carslm, newdata = data.frame(newdata = 30), interval = 'confidence')
predict(carslm, newdata = data.frame(wt = 30), interval = 'confidence')
predict(carslm, newdata = data.frame(wt = 3), interval = 'confidence')
predict(carslm, newdata = data.frame(wt = 3), interval = 'prediction')
predict(carslm, newdata = data.frame(wt = mean(mtcars$wt)), interval = 'confidence')
predict(carslm, newdata = data.frame(wt = mean(2)), interval = 'prediction')
predict(carslm, newdata = data.frame(wt = 2), interval = 'prediction')
#loading data
df <- read.csv("batting_averages.csv")
getwd())
getwd()
setwd("/Users/natdeacon/Desktop/GitHub/cleaning_analysis_templates")
#loading data
df <- read.csv("batting_averages.csv")
df <- df %>% pivot_longer(!Player, names_to = "opponent", values_to = "batting_average")
#loading packages
library(dplyr) #for data maniupulation
df <- df %>% pivot_longer(!Player, names_to = "opponent", values_to = "batting_average")
?pivot_longer
??pivot_longer
#loading packages
library(plyr) #for data maniupulation
df <- df %>% pivot_longer(!Player, names_to = "opponent", values_to = "batting_average")
#loading packages
library(tidyr) #for data maniupulation
library(dplyr)
df <- df %>% pivot_longer(!Player, names_to = "opponent", values_to = "batting_average")
View(df)
